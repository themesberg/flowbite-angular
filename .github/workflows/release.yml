name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Specify the version'
        required: false
        type: string
      dryRun:
        description: 'Start the release with dryRun parameter'
        required: true
        type: boolean
        default: true

jobs:
  release:
    strategy:
      matrix:
        node-version: [20]
        
    if: (github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/release') || (github.event_name == 'workflow_dispatch' && github.event.inputs.dryRun == 'true')
    name: Release new version ðŸ› 
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write
      issues: write
      pull-requests: write
      id-token: write
    steps:
      - name: Check out the code ðŸ—„
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Install dependencies
        shell: bash
        run: pnpm install --frozen-lockfile --prefer-offline

      - name: Release new version ðŸ› 
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
          pnpm exec nx release ${{ github.event.inputs.version || '' }} --verbose --dryRun=${{ github.event.inputs.dryRun }} --yes

        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_CONFIG_PROVENANCE: true
